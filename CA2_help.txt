rails new phoneStoreApp
cd phoneStoreApp
#rails generate scaffold phone make:string model:string price:decimal{10.2} description:text performance:string display:string ram:integer ref:string

rails generate scaffold phone ref:string img:string make:string model:string price:decimal{10.2} description:text performance:string display:string ram:integer comment:text 

rake db:migrate # THIS IS NEEDED TO CREATE THE SCHEMA RUBY FILE
rake db:migrate db/schema.rb # NOTE: need the direrctory db/ in the command


#and run
rails server -b $IP -p $PORT

#And that is for now to get started
#To view just go to preview and go to url
# /phones
###########################



# Now would like to have more than one page so add a menu

# Create a STATIC page now for the home pages etc.
# Have to do something to the controller

# So we run the rails generate command BUT this time only for the CONTROLLER
# Need to add the pages you want....
# home catalogue edit  
rails generate controller staticpages home catalogue edit

#so the staticpages_controller.rb file is created
#and there are 3 methods [for each menu item] 
#that the routes.rb file will point to

#in each of the methods add more info to the routes.rb file  ... :)
## like this in static_pages_controller.rb

 def home
  end

  def catalogue
  end

  def edit
  end

# Now after running the command rails generate controller staticpages home catalogue edit
# The routes.rb in no longer empty [it was almost empty]  # routes.rb found in cofig/ folder

# it now has also the following
  get 'static_pages/home'

  get 'static_pages/catalogue'

  get 'static_pages/edit'

# Cool :)


# restart the server... run the app again
rails server -b $IP -p $PORT

# and the pages home etc are found at
# /static_pages/home  .... etc at the end of the url in the browser

# Now to edit this page 
# Go to the home.html.erb file... it's in the app/views/ folder and in the new static_pages that was created
# And change it a bit [ there are only 3 files at the moment in static_pages folder home.html.erb, catalogue.html.erb and edit.html.erb

<h1>Welcome to the mobile phones comparison website</h1>
<p>There are several of the best phones on the market to compare here at WhichMobile?</p>
<p>Hope you find this website informative.</p>



# Now above the previous 3 lines on home.html.erb
# embed some rubyonrails

<%= provide(:title,'Home') %>

# .. and gives the title


# Now need to add the yield so that it shows in all pages
# Go to the application.html.erb file in

# and in the html page add in <title></title> %yield  ... views/layouts folder
<%= yield(:title) %>



# now int application.html.erb 
# put the %yield insided and div with a class for styling
<div class="container">
      <%= yield %>
    </div>
    
# now embed ruby into the links
 <li><%= link_to('Home', '#') %></li>
        <li><%= link_to('Catalogue', '#') %></li>
        <li><%= link_to('Edit', '#') %></li> 


# Now to make this work need to go to the controller
# First have a look at the routes.rb

# if you ran app it would show an error as the routes.rb stills shows
# get 'static_pages/home'
# get 'static_pages/catalogue'
# get 'static_pages/edit'

# remove the 'static_pages' and change to
 get 'home', to:'static_pages#home'  # note the colon:
  get 'catalogue', to:'static_pages#catalogue'
  get 'edit', to:'static_pages#edit'
  
  
# but running this still shows error 
# link to add the help_path in the links in the application.html.erb file



<li><%= link_to "Catalogue", catalogue_path %></li>
        <li><%= link_to "Edit", edit_path %></li> 
# but for the home page it is a bit different
# have root_path instead of home_pathe as you would expect..

<li><%= link_to "Home", root_path %></li>

# AND REALLY IMPORTANT MUST CHANGE IT IN ROUTES.RB FILE

# FROM:      get 'home', to:'static_pages#home'  # note the colon:
# TO: 
  root 'static_pages#home' ### very different to lines below :)
  
  get 'catalogue', to:'static_pages#catalogue'
  get 'edit', to:'static_pages#edit'
  


# now to add partials to have main application.html.erb less cluttered

# so have the page like this now...

 <%= render('layouts/header') %> <!-- don't need :partial necessarily :) -->
    <div class="container">
      <%= yield %>
    </div>
    <%= render(:partial=>'layouts/footer') %>
    
# but first must create the partial files
# go to app/view/layouts folder
# create new file
# rename as _header.html.erb
# and same for _footer.html.erb

# remove the header and footer and paste into the partial files.. _header.html.erb and _footer.html.erb

# in the _header.html.erb
# paste in
<header class="headSec">
      <h2>WhichMobile? The ultimate mobile phone comparison website</h2> <!-- The h1 is in the home.html.erb files etc. -->
      <ul>
        <li><%= link_to "Home", root_path %></li>
        <li><%= link_to("Catalogue", catalogue_path) %></li>
        <li><%= link_to("Edit", edit_path) %></li> 
      </ul>
</header>

# and for link that is already dynamic - not static_pages
<li><%= link_to("Phones", '/phones') %></li>  # THE FORWARD SLASH IS REQUIRED - ELSE WON'T START FROM ROOT BUT HAVE PHONES/PHONES



#######
# add just a column in the table
#rails g migration add_column_name_to_table column_name:type

rails generate migration add_img_to_phone img:string
rake db:migrate
rake db:migrate db/schema.rb

# delete table
rails generate migration drop_table :table_name

############








#########################################################################



cd ~/environment
$ rails _5.1.4_ new sample_app #don't need number
$ cd sample_app/

$ rails generate scaffold registration firstname:string lastname:string email:string

$ rake db:migrate # THIS IS NEEDED TO CREATE THE SCHEMA RUBY FILE
$ rake db:migrate db/schema.rb # NOTE: need the direrctory db/ in the command

$ rails server -b $IP -p $PORT

###########################
## LAST STEP:
## CLICK ON PREVIEW
## SELECT PREVIEW RUNNING APPLICATION
## YOU CAN EXPAND THE VIEW TO SEE FULL VIEW OF APP

## THE APP RUNS ON SERVER :)
#############################


## NOT PART OF THE APP
##########root 'controller_name#action_name'
##########$ root registrations_controller#registrations  # ?? inside route.rb file only?

#ec2-user:~/environment/my_first_app (master) 
$ ls app/controllers/
#yields
# >>  application_controller.rb  concerns  registrations_controller.rb

#config/routes.rb file
Rails.application.routes.draw do
  resources :registrations
  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
 root 'registrations_controller#registrations' ### ???
end
#########


#bookstore
rails generate model adverts name:string description:text price:decimal seller_id:integer email:string
rake db:migrate

#in seeds.rb file
Advert.create(name:"Avensis",description:"lovely Avensis 2.0",price:2000,seller_id:1,email:"me@liammccabe.ie")

#in controller file adverts..
rak


## Liam Blog app
# limaBlog folder is created...

# application.html.erb
# ... is this already added?
  <head>
    <title>LiamBlog</title>
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
    <%= yield %>
  </body>
# seed.rb #folder /db
# schema.rb [just for viewing only] #folder /db
# routes.rb #folder /config
# add get 'adverts/:id' => 'adverts#show'
# adverts_controller.rb #folder /bookstore/app/controllers/ # BOOKSTORE??? HUH?
# show.html.erb #folder /bookstore/app/views/show.html.erb
# add the follwing...
 <head>
        <title>Liam loves Rail</title>
    </head>
    <body>
        <p>Name:<%=@ad.name%></p>
        <p>Description:<%=@ad.description%></p>
        <p>Price:<%=@ad.price%></p>
        <p>Seller Id:<%=@ad.seller_id%></p>
        <p>Email:<%=@ad.email%></p>
    </body>

rails new liamBlog
rails generate scaffold blog author:string name:string blogtxt:text
rake db:migrate
rails server -b $IP -p $PORT





