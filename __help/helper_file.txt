rails new phonestore
cd phonestore
# i think you need to run the follwing
Type:
bundle install


# now need to create database with columns image,make,model,description,price
rails generate scaffold item image:string make:string model:string description:text price:decimal 

rake db:migrate # THIS IS NEEDED TO CREATE THE SCHEMA RUBY FILE

# now when you run last line and you see a lot of ======= then it's good

# the schema.rb file is created and is in the db folder
# if you open this file you can see teh columns you added...


rake db:migrate db/schema.rb # NOTE: need the direrctory db/ in the command


#and now run the App by typing below :)
rails server -b $IP -p $PORT


# to view the app click on the Preview on top menu
# then click on Preview Running Application

# to view the app go the browser 
# but a quick way is to click there's a tab below one say [B] and on the
# right is the word Browser.. if you click the box with arrow right of the Browser
# word and it will open the browser

# if it is running a note will say Yay! Youâ€™re on Rails!

# now to view the items page 
# at the end of the text in the url at top add 

/item

# now it will show errors so we have to add some more

###########################

# forget about the error for now 
# we need to add static pages .. pages that don't have a database

# Now would like to have more than one page so add a menu

# Create a STATIC page now for the home pages etc.
# Have to do something to the controller

# So we run the rails generate command BUT this time only for the CONTROLLER
# Need to add the pages you want....
# home about  

# so type in... home and about will be new pages separate to the page made above

# Need now to stop the server running...
# click in blue [the terminal where the cursor square is and type

CTRL C
# and now you can type 

rails generate controller static_pages home about

# now if you open the app folder
# then open the static_pages folder
# this folder has been just created

# if you click on the static_pages folder
# you will see the about.html.erb and home.html.erb pages you just created


# also is the staticpages_controller.rb file is created in the app/controllers folder
#and there are 2 methods [for each menu item] 
#that the routes.rb file will point to

# in each of the methods add more info to the routes.rb file  ... :)
## like this in static_pages_controller.rb

  def home 
  end

  def about
  end

# The routes.rb in no longer empty [it was almost empty]  # routes.rb found in cofig/ folder

# it now has also the following
  get 'static_pages/home'

  get 'static_pages/about'


# Cool :)


# restart the server... run the app again
rails server -b $IP -p $PORT

# and the pages home etc are found at

# add at the end of the url
/static_pages/home  .... etc at the end of the url in the browser

# and should show the page without errors
# and similarly 
/static_pages/about 


# Now to edit this page 
# Go to the home.html.erb file... it's in the app/views/static_pages folder and in the new static_pages that was created
# And change it a bit [ there are only 2 files at the moment in static_pages folder home.html.erb, catalogue.html.erb and edit.html.erb

# You can add what html you like here instead what's there

<h1>StaticPages#home</h1>
Find me in app/views/static_pages/home.html.erb


<h1>Welcome to the phone shop</h1>
<p>You can buy the latest phones here.</p>

# and in the about.html.erb file  in app/views/static_pages

<h1>The Phone Shop</h1>
<p>You can buy the latest phones here.</p>

# now as the file as the erb means that it can have html and ruby
# at the moment it just has html
# now add the Title of page using ruby

# embed some rubyonrails
# add this on the top of the home.html.erb file

<%= provide(:title,'Home') %>

# ... and gives the title

# and 

<%= provide(:title,'About') %>

 
# and save again each time change in page  [file save or ctrl S]

# Now need to add the yield so that it shows in all pages
# Go to the application.html.erb file 

# the home.html.erb is only for the home but the
# application.html.erb you put here what you want to appear in all pages

# and in the html page add in <title></title> %yield  ... views/layouts folder
# replace word Phoneshore with
<%= yield(:title) %>

# so should now have 
<title><%= yield(:title) %></title>
# in the application.html.erb file... which is in the app/layouts folder


# Now want to add stying and links for a menu

# now int application.html.erb 
# put the %yield inside and div with a class for styling in the <body> tag

    <div class="container">
      <%= yield %>
    </div>
    
# now embed ruby into the links and put in header tag above container div
    <header class="head">
        <li><%= link_to('Home', '#') %></li>
        <li><%= link_to('About', '#') %></li>
    </header>
    
# and can add a footer div below the container
    <footer class="foot">
    
    </footer>
        
# should now how in the application.html.erb file   app/views/layouts folder
<!DOCTYPE html>
<html>
  <head>
    <title><%= yield(:title) %></title>
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
    <header class="head">
        <li><%= link_to('Home', '#') %></li>
        <li><%= link_to('About', '#') %></li>
    </header>
   <div class="container">
      <%= yield %>
    </div>
  </body>
</html>








# First have a look at the routes.rb
# the routes.rb file tells what page for a page to be found
# it's found in the app/config folder

# if you ran app it would show an error as the routes.rb stills shows
# get 'static_pages/home'
# get 'static_pages/about'


# remove the 'static_pages' and change to
  get 'home', to:'static_pages#home'  
  get 'about', to:'static_pages#about'

# now this time go to the url in the browser 
# and you will see the pages are now /home and /about
# instead what was /static_pages/home and /static_pages/about at the end of the url path


# Now we need to change links in the application.html.erb file
# in the <header></header>

        <li><%= link_to "Home", root_path %></li>
        <li><%= link_to "About", about_path %></li> 
        
# but for the home page it is a bit different
# have root_path instead of home_path as you would expect..

<li><%= link_to "Home", root_path %></li>

# and now when you open the app from now on it will automatically show the home
# page and not the "Yah, you are on rails!" :)



# AND REALLY IMPORTANT MUST CHANGE IT IN ROUTES.RB FILE

# FROM:      get 'home', to:'static_pages#home'  # note the colon:
# TO: 
  root 'static_pages#home' ### very different to lines below :)
  
  get 'about', to:'static_pages#about'

# and the routes.rb should look like...

Rails.application.routes.draw do
  root 'static_pages#home'  
  get 'about', to:'static_pages#about'

  resources :items
  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
end


# now to add partials to have main application.html.erb less cluttered
# now this is optional as just takes some code out of the application.html.erb file

# so have the page like this now...

    <%= render('layouts/header') %> <!-- don't need :partial necessarily :) -->
    <div class="container">
      <%= yield %>
    </div>
    <%= render('layouts/footer') %>
    
# so can add what is in the <header> div into the _header partial
# and the <footer> div into the _footer partial
    

# but first must create the partial files
# go to app/view/layouts folder
# create new file  [right click on layouts folder and select new file
# rename as _header.html.erb   # the underscore at the start is needed
# and same for _footer.html.erb

# remove the header and footer and paste into the partial files.. _header.html.erb and _footer.html.erb

# in the _header.html.erb
# paste in
<header class="head">
    <li><%= link_to "Home", root_path %></li>
    <li><%= link_to "About", about_path %></li> 
</header>

<footer class="foot">
</footer>

# but you need to add the ruby cody

<%= render('layouts/header') %> 
# so that it includes the _header.rb partial you removed from main application.html.erb file
# and also
<%= render('layouts/footer') %>

# so the application now should look like

<!DOCTYPE html>
<html>
  <head>
    <title><%= yield(:title) %></title>
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
   <%= render('layouts/header') %>
   <div class="container">
      <%= yield %>
    </div>
    <%= render('layouts/footer') %>
  </body>
</html>


# the body now how less code... so looks needed but it wasn't necessary to do so


# can now add an extra link in the menu for the Products page in the _header.rb file

<header class="head">
    <li><%= link_to "Home", root_path %></li>
    <li><%= link_to "About", about_path %></li>
    <li><%= link_to "Products", items_path %></li>
</header

# the third line is the new link to the products page...


#################

# now for styling 
# can add a class to a link...

# first of all either go to w3schools.com website for a get a whole template
# or can use Liam's css he used
## 

# go to app/assets/stylesheets folder
# and open the application.css file and paste in css below

#itemsContainer {
    width: 100%;
    text-align: center;
    
    
}


#itemsContainer h1 {
   display: block;
    color: #4CAF50;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    
    
}


.itemhols {
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 10px;
    display: inline-block;
    width: 22%;
    padding:10px;
    min-height: 300px;
   
}


.itemhols h1 {
   display: block;
    color: #4CAF50;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 20px
    
}


.itemhols p {
   display: block;
    color: #4CAF50;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 16px
    
}



.itemholsIm {
    width: 30%; 
    margin-left: auto; 
    margin-right: auto; 
    display: block;
    
}


.button {
    background-color: #4CAF50;
    border: none;
    color: white;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
}






#itemsContainer {
    width: 100%;
    text-align: center;
    
    
}


#itemsContainer h1 {
   display: block;
    color: #4CAF50;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    
    
}


.itemhols {
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 10px;
    display: inline-block;
    width: 22%;
    padding:10px;
    min-height: 300px;
   
}


.itemhols h1 {
   display: block;
    color: #4CAF50;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 20px
    
}


.itemhols p {
   display: block;
    color: #4CAF50;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 16px
    
}



.itemholsIm {
    width: 30%; 
    margin-left: auto; 
    margin-right: auto; 
    display: block;
    
}


.button {
    background-color: #4CAF50;
    border: none;
    color: white;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
}

## and save



###






# and remove all the html but keep the ruby...

# have at the momment... for index.html.erb   in app/views/ites folder

<p id="notice"><%= notice %></p>
<h1>Items</h1>

<table>
  <thead>
    <tr>
      <th>Image</th>
      <th>Make</th>
      <th>Model</th>
      <th>Description</th>
      <th>Price</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @items.each do |item| %>
      <tr>
        <td><%= item.image %></td>
        <td><%= item.make %></td>
        <td><%= item.model %></td>
        <td><%= item.description %></td>
        <td><%= item.price %></td>
        <td><%= link_to 'Show', item, :class=>"button",:role=>"button"%></td>
        <td><%= link_to 'Edit', edit_item_path(item) %></td>
        <td><%= link_to 'Destroy', item, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Item', new_item_path %>


#####

# now should have like...
<p id="notice"><%= notice %></p>
<h1>Phones</h1>
    <% @items.each do |item| %>
     <div class="itemhols">
       <%= link_to(image_tag(item.image, :alt => "phone image", :class =>"itemholsIm"), item_path) %>
       <p><%= item.make %></p>
       <p><%= item.model %></p>
       <p><%= item.description %></p>
       <p><%= item.price %></p>
       <p>
        <%= link_to 'Show', item, :class=>"button",:role=>"button" %>
        <%= link_to 'Edit', edit_item_path(item), :class=>"button",:role=>"button" %>
        <%= link_to 'Destroy', item, method: :delete, data: { confirm: 'Are you sure?' }, :class=>"button",:role=>"button" %></td>
       </p>
     </div>
    <% end %>
  
<p><%= link_to 'New Item', new_item_path, :class=>"button",:role=>"button" %></p>


# and add div with id around the items
<p id="notice"><%= notice %></p>
<div id="#itemsContainer">
<h1>Phones</h1>
    <% @items.each do |item| %>
     <div class="itemhols">
       <%= link_to(image_tag(item.image, :alt => "phone image", :class =>"itemholsIm"), items_path) %>
       <p class="itemdetails"><%= item.make %><br />
       <%= item.model %><br />
       <%= item.description %><br />
       <%= item.price %></p>
       <p>
        <%= link_to 'Show', item, :class=>"button",:role=>"button" %>
        <%= link_to 'Edit', edit_item_path(item), :class=>"button",:role=>"button" %>
        <%= link_to 'Delete', item, method: :delete, data: { confirm: 'Are you sure?' }, :class=>"button",:role=>"button" %></td>
       </p>
     </div>
    <% end %>
  
<p><%= link_to 'New Item', new_item_path, :class=>"button",:role=>"button" %></p>

</div>

# and a pargraph p with itemdetails class around the info


#############

# now need to add images
# open folder where the images are stored on the computer
# and drag the images to the app/assets/images folder

# drop on the images folder
# and the images are in the right place




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## to be continued... remove html...

# can now add
<td><%= link_to 'Show', item, :class=>"button",:role=>"button"%></td>


### Add class
<%= link_to "Product", '/item', { :class=>"w3-bar-item w3-button" } %>  <!-- forward slash required -->

### Add img
<%=image_tag("gallery/Drawings/Plants vs Zombies.jpg")%>



#######
# add just a column in the table
#rails g migration add_column_name_to_table column_name:type

rails generate migration add_img_to_phone img:string
rake db:migrate
rake db:migrate db/schema.rb

# delete table
rails generate migration drop_table :table_name

############






     <%=  #data = Phone.where("make = ?", params[:make])  %>
     <%= #data.each do |phone| %>
     <%=  #data = Phone.where( [:make] == "Apple") %> 
    <%=  #data = Phone.select { |c| c[:make] == "Apple"} %> 





#not working

<% @phones.each do |phone| %>
 <div class="w3-quarter">
    <div class="img-phone"><%=image_tag(phone.img) %></div>
    <div><div class="attrib-phone">Model</div><div class="val-phone"><%= phone.model %></div></div>
    <div><div class="attrib-phone">Price</div><div class="val-phone"><%= phone.price %></div></div>
    <div>
       <!--<div class="btn-view-details"><%= link_to "View Details", phone_path, :id =>phone.id %>{ :class=>"w3-bar-item w3-button" } %></div>
       
       -->
       <%= link_to "View Details", :controller => "phone",:action => "show", :id => phone.id %>

       <%= #link_to item.description, :controller => "item",:action => "show", :id => item.id %>
       <div class="btn-add-to-cart"><%= link_to "Add to Cart", compare_path, { :class=>"w3-bar-item w3-button" } %></div>
    </div>
 </div>
<% end %>









#### original show.html.erb

<p id="notice"><%= notice %></p>

<p>
  <strong>Ref:</strong>
  <%= @phone.ref %>
</p>

<p>
  <strong>Img:</strong>
  <%= @phone.img %>
</p>

<p>
  <strong>Make:</strong>
  <%= @phone.make %>
</p>

<p>
  <strong>Model:</strong>
  <%= @phone.model %>
</p>

<p>
  <strong>Price:</strong>
  <%= @phone.price %>
</p>

<p>
  <strong>Description:</strong>
  <%= @phone.description %>
</p>

<p>
  <strong>Performance:</strong>
  <%= @phone.performance %>
</p>

<p>
  <strong>Display:</strong>
  <%= @phone.display %>
</p>

<p>
  <strong>Ram:</strong>
  <%= @phone.ram %>
</p>

<p>
  <strong>Comment:</strong>
  <%= @phone.comment %>
</p>

<%= link_to 'Edit', edit_phone_path(@phone) %> |
<%= link_to 'Back', phones_path %>


